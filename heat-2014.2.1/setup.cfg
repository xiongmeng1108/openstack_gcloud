[metadata]
name = heat
version = 2014.2.1
summary = OpenStack Orchestration
description-file = 
	README.rst
author = OpenStack
author-email = openstack-dev@lists.openstack.org
home-page = http://www.openstack.org/
classifier = 
	Environment :: OpenStack
	Intended Audience :: Information Technology
	Intended Audience :: System Administrators
	License :: OSI Approved :: Apache Software License
	Operating System :: POSIX :: Linux
	Programming Language :: Python
	Programming Language :: Python :: 2
	Programming Language :: Python :: 2.7
	Programming Language :: Python :: 2.6

[files]
packages = 
	heat
scripts = 
	bin/cinder-keystone-setup
	bin/heat-api
	bin/heat-api-cfn
	bin/heat-api-cloudwatch
	bin/heat-db-setup
	bin/heat-engine
	bin/heat-keystone-setup
	bin/heat-keystone-setup-domain
	bin/heat-manage
	bin/gcloud-template-api
data_files =
       lib/systemd/system/ = usr/lib/systemd/system/gcloud-template-api.service
       share/heat/ = etc/heat/api-paste.ini
       /etc/heat/ = etc/heat/heat.conf.sample
[entry_points]
oslo.config.opts = 
	heat.common.config = heat.common.config:list_opts
	heat.common.wsgi = heat.common.wsgi:list_opts
heat.clients = 
	ceilometer = heat.engine.clients.os.ceilometer:CeilometerClientPlugin
	cinder = heat.engine.clients.os.cinder:CinderClientPlugin
	glance = heat.engine.clients.os.glance:GlanceClientPlugin
	heat = heat.engine.clients.os.heat_plugin:HeatClientPlugin
	keystone = heat.engine.clients.os.keystone:KeystoneClientPlugin
	nova = heat.engine.clients.os.nova:NovaClientPlugin
	neutron = heat.engine.clients.os.neutron:NeutronClientPlugin
	swift = heat.engine.clients.os.swift:SwiftClientPlugin
	trove = heat.engine.clients.os.trove:TroveClientPlugin
	sahara = heat.engine.clients.os.sahara:SaharaClientPlugin
heat.constraints = 
	nova.flavor = heat.engine.resources.server:FlavorConstraint
	neutron.network = heat.engine.clients.os.neutron:NetworkConstraint
	neutron.port = heat.engine.clients.os.neutron:PortConstraint
	neutron.router = heat.engine.clients.os.neutron:RouterConstraint
	neutron.subnet = heat.engine.clients.os.neutron:SubnetConstraint
	glance.image = heat.engine.clients.os.glance:ImageConstraint
	iso_8601 = heat.engine.resources.iso_8601:ISO8601Constraint
	nova.keypair = heat.engine.resources.nova_keypair:KeypairConstraint
heat.stack_lifecycle_plugins = 
heat.templates = 
	heat_template_version.2013-05-23 = heat.engine.hot.template:HOTemplate20130523
	heat_template_version.2014-10-16 = heat.engine.hot.template:HOTemplate20141016
	HeatTemplateFormatVersion.2012-12-12 = heat.engine.cfn.template:HeatTemplate
	AWSTemplateFormatVersion.2010-09-09 = heat.engine.cfn.template:CfnTemplate
oslo.messaging.notify.drivers = 
	heat.openstack.common.notifier.log_notifier = oslo.messaging.notify._impl_log:LogDriver
	heat.openstack.common.notifier.no_op_notifier = oslo.messaging.notify._impl_noop:NoOpDriver
	heat.openstack.common.notifier.rpc_notifier2 = oslo.messaging.notify._impl_messaging:MessagingV2Driver
	heat.openstack.common.notifier.rpc_notifier = oslo.messaging.notify._impl_messaging:MessagingDriver
	heat.openstack.common.notifier.test_notifier = oslo.messaging.notify._impl_test:TestDriver

[global]
setup-hooks = 
	pbr.hooks.setup_hook

[compile_catalog]
directory = heat/locale
domain = heat

[update_catalog]
domain = heat
output_dir = heat/locale
input_file = heat/locale/heat.pot

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = heat/locale/heat.pot

[build_sphinx]
all_files = 1
build-dir = doc/build
source-dir = doc/source

[egg_info]
tag_build = 
tag_date = 0
tag_svn_revision = 0

